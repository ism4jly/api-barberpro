// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  endereco  String?
  password  String
  stripe_customer_id String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
  subscriptions Subscription?
  haircuts Haircut[]
  service Service[]
}

model Subscription {
  id        String   @id
  status    String
  priceId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("subscriptions")
  userId String @unique
  user User @relation(fields: [userId], references: [id])
}

model Haircut {
  id        String   @id @default(uuid())
  name      String
  price     Float
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("haircuts")
  user User @relation(fields: [user_id], references: [id])
  user_id String
  service Service[]
}

model Service{
  id        String   @id @default(uuid())
  customer      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("services")
  haircut Haircut @relation(fields: [haircut_id], references: [id])
  haircut_id String
  user User @relation(fields: [user_id], references: [id])
  user_id String
}


